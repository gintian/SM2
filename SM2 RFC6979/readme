基于gmssl，通过阅读RFC679文档，实现了SM2算法
#---RFC4979中生成随机数k------
if sys.version[0] == '2':
    safe_ord = ord
else:
    safe_ord = lambda x: x
def bytes_to_int(x):
    o = 0
    for b in x:
        o = (o << 8) + safe_ord(b)
    return o
def deterministic_generate_k(msghash, priv):
    v = b'\x01' * 32
    k = b'\x00' * 32
    k = hmac.new(k, v+b'\x00'+priv+msghash, hashlib.sha256).digest()
    v = hmac.new(k, v, hashlib.sha256).digest()
    k = hmac.new(k, v+b'\x01'+priv+msghash, hashlib.sha256).digest()
    v = hmac.new(k, v, hashlib.sha256).digest()
    return bytes_to_int(hmac.new(k, v, hashlib.sha256).digest())
i="123"
i_sha = hashlib.sha256(i.encode('utf-8')).digest()
i_priv=i.encode(encoding="utf8",errors="strict")
k=deterministic_generate_k(i_sha,i_priv)
print(k)
#---RFC4979中生成随机数k------
